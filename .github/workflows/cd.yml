name: Deploy to ECS using Terraform and CodeDeploy

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
        working-directory: terraform2/

      - name: Terraform Plan
        run: terraform plan
        working-directory: terraform2/

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: terraform2/

      - name: Get latest ECS Task Definition ARN
        id: get_task_def
        run: |
          arn=$(aws ecs list-task-definitions --family-prefix tyagi-task --sort DESC --max-items 1 --region us-east-1 --query "taskDefinitionArns[0]" --output text)
          echo "Latest Task Definition ARN: $arn"
          echo "arn=$arn" >> $GITHUB_OUTPUT

      - name: Trigger ECS Blue/Green Deployment using CodeDeploy
        run: |
            aws deploy create-deployment \
              --application-name tyagi-codedeploy-app \
              --deployment-group-name tyagi-deployment-group \
              --revision revisionType=ECS,ecsService={serviceName=tyagi-service,clusterName=tyagi-cluster},taskDefinition=${{ steps.get_task_def.outputs.arn }} \
              --region us-east-1
